@name Score Viewer
@inputs EGP:wirelink EGP2:wirelink Scores:table Names:table Time JobsActive:table
@persist Sortal:string SortDirection Job:table
@trigger

if(dupefinished()){reset()}


if(first()){
    
    Sortal = "deliveries"
    SortDirection = 1 
    
    ##include "opsconfig/lober_jobs"
    #include "opsconfig/ssg_phx_jobs"
    
    timer("egp1",1000)
    timer("egp2",6000)

}





if(clk("egp1")){
    
    timer("egp1",10000)

    K = Scores:keys()
    KT = K:count()
    EGP:egpClear()
    
    K2 = array()
    K3 = array()
    
    for(X = 1,KT){
        
        S = K[X,string]
        
        Needle = 1
        
        for(Y = 1,K2:count()){
            
            if(K3[Y,number]*SortDirection <= Scores[S,table][Sortal,number]*SortDirection){
                
                break
                
            }
            
            Needle++
            
        }
        
        K2:insertString(Needle,S)
        K3:insertNumber(Needle,Scores[S,table][Sortal,number])
    
    }
        
    for(X = 1,KT){
        
        S = K2[X,string]
        
        EGP:egpText(X,Names[S,string]:sub(0,15),vec2(0,(X-1)*14))
        EGP:egpText(X+KT,round(Scores[S,table]["dist",number]/(12*5280),2)+" CM",vec2(140,(X-1)*14))
        EGP:egpText(X+(KT*2),Scores[S,table]["deliveries",number]+" moves",vec2(230,(X-1)*14))
        EGP:egpText(X+(KT*3),(Scores[S,table]["final",number]-Scores[S,table]["offmap",number])+" local",vec2(320,(X-1)*14))
        EGP:egpText(X+(KT*4),(Scores[S,table]["offmap",number])+" off-map",vec2(400,(X-1)*14))
        
    }
    
}elseif(clk("egp2")){
    
    timer("egp2",10000)

    EGP2:egpClear()
    
    K = JobsActive:keys()
    KT = K:count()
    
    K2 = array()
    K3 = array()
    
    for(X = 1,KT){
        
        S = K[X,string]
        
        Needle = 1
        
        for(Y = 1,K2:count()){
            
            if(K3[Y,number]*1 <= JobsActive[S,number]*1){
                
                break
                
            }
            
            Needle++
            
        }
        
        K2:insertString(Needle,S)
        K3:insertNumber(Needle,JobsActive[S,number])
    
    }
        
    for(X = 1,KT){
        
        S = K2[X,string]
        
        EGP2:egpText(X,Job[S,table]["job",string]+" "+Job[S,table]["name",string],vec2(0,(X-1)*14))
        EGP2:egpColor(X,Job[S,table]["color",vector])
        EGP2:egpText(X+KT,JobsActive[S,number]+" Cars Active",vec2(400,(X-1)*14))
        EGP2:egpColor(X+KT,Job[S,table]["color",vector])
        
    }
    
}
